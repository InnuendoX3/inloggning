{"version":3,"sources":["data/UserKit.js","pages/LoginPage.jsx","components/PrivateRoute.jsx","pages/PrivatePage.jsx","App.js","reportWebVitals.js","index.js"],"names":["ROOT_URL","API_URL","LOGIN_URL","email","password","payload","fetch","method","body","JSON","stringify","headers","this","getPublicHeaders","url","getPrivateHeaders","getToken","token","localStorage","setItem","getItem","LoginPage","useState","emailInput","setEmailInput","passwordInput","setPasswordInput","setToken","userKit","UserKit","type","value","onChange","e","target","placeholder","onClick","login","then","res","json","data","PrivateRoute","Component","component","rest","render","props","to","PrivatePage","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"sNAAMA,EAAW,iCACXC,EAAO,UAAMD,EAAN,WAEPE,GADQ,UAAMF,EAAN,SACC,UAAMA,EAAN,oB,gGAIPG,EAAOC,GACX,IAAMC,EAAU,CACdF,QAAOC,YAET,OAAOE,MAAMJ,EAAW,CACtBK,OAAQ,OACRC,KAAMC,KAAKC,UAAUL,GACrBM,QAASC,KAAKC,uB,8BAKhB,IAAMC,EAAG,UAAMb,EAAN,MACT,OAAOK,MAAMQ,EAAK,CAChBH,QAASC,KAAKG,wB,wCAKhB,IAAMD,EAAG,UAAMb,EAAN,aACT,OAAOK,MAAMQ,EAAK,CAChBH,QAASC,KAAKG,wB,yCAKhB,MAAO,CACL,eAAgB,sB,0CAKlB,MAAO,CACL,eAAgB,mBAChB,cAAgB,UAAhB,OAA2BH,KAAKI,e,+BAI3BC,GACPC,aAAaC,QAAQ,UAAWF,K,iCAIhC,OAAOC,aAAaE,QAAQ,e,oBC/CjB,SAASC,IAAa,IAAD,EACEC,mBAAS,0BADX,mBAC3BC,EAD2B,KACfC,EADe,OAEQF,mBAAS,sBAFjB,mBAE3BG,EAF2B,KAEZC,EAFY,OAGRJ,mBAAS,MAHD,mBAGpBK,GAHoB,WAK5BC,EAAU,IAAIC,EAepB,OACE,gCACE,qCACA,uBACEC,KAAK,OACLC,MAAOR,EACPS,SAAU,SAAAC,GAAC,OAAIT,EAAcS,EAAEC,OAAOH,QACtCI,YAAY,UAEd,uBACEL,KAAK,WACLC,MAAON,EACPO,SAAU,SAAAC,GAAC,OAAIP,EAAiBO,EAAEC,OAAOH,QACzCI,YAAY,aAEd,wBAAQC,QA5BZ,WAIA,IAAqBjC,EAAOC,EAAPD,EAHPoB,EAGcnB,EAHFqB,EAIxBG,EAAQS,MAAMlC,EAAOC,GACpBkC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJd,EAASc,EAAKxB,OACdW,EAAQD,SAASc,EAAKxB,WAmBtB,sB,oBClCS,SAASyB,EAAT,GAA0D,IAAvBC,EAAsB,EAAjCC,UAAyBC,EAAQ,6BAChEjB,EAAU,IAAIC,EACpB,OACE,cAAC,IAAD,2BAAWgB,GAAX,IAAiBC,OAAS,SAAAC,GAAK,OAC7BnB,EAAQZ,WAAa,cAAC2B,EAAD,eAAeI,IAClC,cAAC,IAAD,CAAUC,GAAG,eCPN,SAASC,IACtB,OACE,uDCiCWC,MA7Bf,WAgBE,OACE,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAASP,UAAWvB,IAChC,cAACqB,EAAD,CAAcS,KAAK,WAAWP,UAAWK,UChBlCG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASd,OACP,cAAC,IAAMe,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.f3c86469.chunk.js","sourcesContent":["const ROOT_URL = \"https://frebi.willandskill.eu/\"\r\nconst API_URL = `${ROOT_URL}api/v1/`\r\nconst AUTH_URL = `${ROOT_URL}auth/`\r\nconst LOGIN_URL = `${ROOT_URL}api-token-auth/`\r\n\r\nexport default class {\r\n\r\n  login(email, password) {\r\n    const payload = {\r\n      email, password\r\n    }\r\n    return fetch(LOGIN_URL, {\r\n      method: \"POST\",\r\n      body: JSON.stringify(payload),\r\n      headers: this.getPublicHeaders()\r\n    })\r\n  }\r\n\r\n  getMe() {\r\n    const url = `${API_URL}me`\r\n    return fetch(url, {\r\n      headers: this.getPrivateHeaders()\r\n    })\r\n  }\r\n\r\n  getCustomerList() {\r\n    const url = `${API_URL}customers`\r\n    return fetch(url, {\r\n      headers: this.getPrivateHeaders()\r\n    })\r\n  }\r\n\r\n  getPublicHeaders() {\r\n    return {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  }\r\n\r\n  getPrivateHeaders() {\r\n    return {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Authorization\": `Bearer ${this.getToken()}`\r\n    }\r\n  }\r\n\r\n  setToken(token) {\r\n    localStorage.setItem(\"JWT_APP\", token)\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem(\"JWT_APP\")\r\n  }\r\n}","import React, {useState} from 'react'\r\nimport UserKit from '../data/UserKit';\r\n\r\nexport default function LoginPage() {\r\n  const [emailInput, setEmailInput] = useState(\"webb19@willandskill.se\")\r\n  const [passwordInput, setPasswordInput] = useState(\"javascriptoramverk\")\r\n  const [token, setToken] = useState(null)\r\n\r\n  const userKit = new UserKit()\r\n\r\n  function handleOnClick() {\r\n    handleLogin(emailInput, passwordInput)\r\n  }\r\n\r\n  function handleLogin(email, password) {\r\n    userKit.login(email, password)\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      setToken(data.token)\r\n      userKit.setToken(data.token)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>JWT</h1>\r\n      <input \r\n        type=\"text\" \r\n        value={emailInput} \r\n        onChange={e => setEmailInput(e.target.value)}\r\n        placeholder=\"Email\"\r\n      />\r\n      <input \r\n        type=\"password\" \r\n        value={passwordInput}\r\n        onChange={e => setPasswordInput(e.target.value)}\r\n        placeholder=\"Password\"\r\n      />\r\n      <button onClick={handleOnClick}>Login</button>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport {Route, Redirect} from 'react-router-dom'\r\nimport UserKit from '../data/UserKit'\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n  const userKit = new UserKit()\r\n  return (\r\n    <Route {...rest} render={ props => (\r\n      userKit.getToken() ? <Component {...props} />\r\n      : <Redirect to='/login' />\r\n    )} />\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function PrivatePage() {\r\n  return (\r\n    <div>\r\n      This page is private\r\n    </div>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\nimport './App.css';\r\nimport UserKit from './data/UserKit';\r\nimport {Switch, Route} from 'react-router-dom'\r\nimport LoginPage from './pages/LoginPage';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PrivatePage from './pages/PrivatePage';\r\n\r\nfunction App() {\r\n  \r\n/*   function fetchMe() {\r\n    userKit.getMe()\r\n    .then(res=>res.json())\r\n    .then(data => console.log(data))\r\n  }\r\n\r\n  function fetchCustomerList() {\r\n    userKit.getCustomerList()\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      console.log(data)\r\n    })\r\n  }\r\n */\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route path='/login' component={LoginPage} />\r\n        <PrivateRoute path='/private' component={PrivatePage} />\r\n      </Switch>\r\n\r\n      {/*token && <button onClick={fetchMe}> Fetch Me </button> }\r\n      {token && <button onClick={fetchCustomerList}> Get Customers </button> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}